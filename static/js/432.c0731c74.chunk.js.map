{"version":3,"file":"static/js/432.c0731c74.chunk.js","mappings":"oGAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C,+HClCMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,cAAO,wGACWC,MAAM,2DAAD,OACwCF,IAFxD,cACCG,EADD,gBAIqBA,EAAEC,OAJvB,uBAIGC,EAJH,EAIGA,QAJH,kBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,cAAO,WAA0BC,GAA1B,yFACWL,MAAM,sCAAD,OACmBK,EADnB,oBACiCP,IAFjD,cACCG,EADD,gBAIiBA,EAAEC,OAJnB,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeG,EAAtB,iDAAO,OAAP,cAAO,WAA8BD,EAAIE,GAAlC,yFACaP,MAAM,sCAAD,OACqBK,EADrB,YAC2BE,EAD3B,oBAC2CT,EAD3C,oBADlB,cACGG,EADH,gBAIqBA,EAAEC,OAJvB,cAIKC,EAJL,yBAKMA,GALN,kEASA,SAAeK,EAAtB,+CAAO,OAAP,cAAO,WAAgCC,GAAhC,yFACaT,MAAM,qDAAD,OACoCF,EADpC,kBACqDW,EADrD,+CADlB,cACGR,EADH,gBAIqBA,EAAEC,OAJvB,cAIKC,EAJL,yBAKMA,GALN,kE,6ECSP,UAhCiB,WACf,OAA0CO,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAMA,IAJAC,EAAAA,EAAAA,YAAU,YACRd,EAAAA,EAAAA,MAAsBX,MAAK,SAAAa,GAAC,OAAIW,EAAiBX,EAArB,GAC7B,GAAE,IAECU,EACF,OACE,iCACA,4CACE,wBACGA,EAAcG,KAAI,SAAAC,GACjB,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAQV,IAA5B,WACE,gBACEY,IAAG,0CAAqCF,EAAQG,aAChDC,IAAKJ,EAAQK,MACbC,MAAM,SAER,wBAAKN,EAAQK,YAPRL,EAAQV,GAWpB,QAKV,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/FetchMovies/fetchMovies.js","components/HomePage/HomePage.js"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const API_KEY = 'f337b3367ff87f6c35f27ef8641676b2'\n\nexport async function fetchTrendingMovies() {\n  const r = await fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  const { results } = await r.json();\n  return results;\n}\n\nexport async function fetchMovie(id) {\n  const r = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  );\n  const results = await r.json();\n  return results;\n}\n\nexport async function fetchMovieType(id, type) {\n    const r = await fetch(\n        `https://api.themoviedb.org/3/movie/${id}/${type}?api_key=${API_KEY}&language=en-US`\n      );\n      const results = await r.json();\n      return results;\n    \n} \n\nexport async function fetchMovieByName(name) {\n    const r = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${name}&language=en-US&page=1&include_adult=false`\n      )\n      const results = await r.json();\n      return results;\n    \n} \n","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchTrendingMovies } from 'components/FetchMovies/fetchMovies';\n\nconst HomePage = () => {\n  const [popularMovies, setPopularMovies] = useState(null);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(r => setPopularMovies(r));\n  }, []);\n\n  if (popularMovies) {\n    return (\n      <>\n      <h1>Trending today</h1>\n        <ul>\n          {popularMovies.map(popular => {\n            return (\n              <li key={popular.id}>\n                <Link to={`movies/${popular.id}`}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${popular.poster_path}`}\n                    alt={popular.title}\n                    width='320'\n                  />\n                  <h3>{popular.title}</h3>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </>\n    );\n  }\n};\n\nexport default HomePage;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","fetchTrendingMovies","fetch","r","json","results","fetchMovie","id","fetchMovieType","type","fetchMovieByName","name","useState","popularMovies","setPopularMovies","useEffect","map","popular","to","src","poster_path","alt","title","width"],"sourceRoot":""}